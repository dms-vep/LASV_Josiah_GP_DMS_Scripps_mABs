# Configurations for determining functional effects of mutations

# --------------------------------------------------------------------------------------
# Configuration for computing functional scores and fitting global epistasis models
# to each individual selection experiment
# --------------------------------------------------------------------------------------

# Define default parameters for computing functional scores.
# Can be provided to individual selections using the alias operator (*)
func_scores_params_default: &func_scores_params_default
  pseudocount: 0.5
  # `min_wt_count` and `min_wt_frac` are designed to raise errors if selection experiment
  # has excessively low wildtype counts (which will lead to inaccurate estimates).
  min_wt_count: 1000  # error if not at least this many wildtype counts
  min_wt_frac: 0.001  # error if not at least this fraction of counts for wildtype
  # `min_pre_selection_count` and `min_pre_selection_frac` drop variants with low counts
  # or frequencies that may not have sufficient statistics for good estimates.
  min_pre_selection_count: 20  # drop variants < this many pre-selection counts
  # !!! Make min_pre_selection_frac LARGER for larger libraries, such 0.1 / (library size) !!!
  min_pre_selection_frac: 0.000002  # drop variants that are < this fraction of all counts

# Define default parameters for fitting global epistasis models to each
# individual selection to get mutationo effects.
global_epistasis_params: &global_epistasis_params
  # How to clip functional scores at upper / lower bounds. Allowable values:
  #  - median_stop: median func score of all variants with stop codons
  #  - null: no clipping
  #  - a number: clip at this number
  clip_lower: median_stop
  clip_upper: null
  # Do we collapse barcodes with same variant?
  collapse_identical_variants: false  # {false, mean, median}

# Define how to compute functional scores. Each key is a selection experiment.
# A global epistasis model is used to get mutational effects for each selection.
# Recommended naming of selection experiments is:
#   <library>-<post-selection sample date as YYMMDD>-<description>-<replicate>
# Each selection experiment should in turn provide the following keys:
#  - `post_selection_sample`: sample after selection (eg, infection of cells)
#  - `pre_selection_sample`: sample pre selection (eg, initial variant frequencies)
#  - `func_score_params`: parameters for computing functional scores
#  - `global_epistasis_params`: parameters for fitting global epistasis model
func_scores:
  LibA-240507-293T-1:
    post_selection_sample: LibA-240507-no-antibody-1
    pre_selection_sample: LibA-240507-VSVG-1
    func_score_params: *func_scores_params_default
    global_epistasis_params: *global_epistasis_params
  LibA-240523-293T-1:
    post_selection_sample: LibA-240523-no-antibody-1
    pre_selection_sample: LibA-240523-VSVG-1
    func_score_params: *func_scores_params_default
    global_epistasis_params: *global_epistasis_params

  LibB-240523-293T-1:
    post_selection_sample: LibB-240523-no-antibody-1
    pre_selection_sample: LibB-240523-VSVG-1
    func_score_params: *func_scores_params_default
    global_epistasis_params: *global_epistasis_params
  LibB-240604-293T-1:
    post_selection_sample: LibB-240604-no-antibody-1
    pre_selection_sample: LibB-240604-VSVG-1
    func_score_params: *func_scores_params_default
    global_epistasis_params: *global_epistasis_params
  LibB-240619-293T-1:
    post_selection_sample: LibB-240619-no-antibody-1
    pre_selection_sample: LibB-240619-VSVG-1
    func_score_params: *func_scores_params_default
    global_epistasis_params: *global_epistasis_params
  LibB-240624-293T-1:
    post_selection_sample: LibB-240624-no-antibody-1
    pre_selection_sample: LibB-240624-VSVG-1
    func_score_params: *func_scores_params_default
    global_epistasis_params: *global_epistasis_params

# --------------------------------------------------------------------------------------
# Configuration for averaging mutation functional effects across selections and plotting
# them.
# --------------------------------------------------------------------------------------

# Average/plot mutation functional effects from different selections w `avg_func_effects`
# Each key is a condition which has the following values:
#  - `selections`: list of selections for which we average mutation functional effects
#  - `avg_method`: how to average across the selections, options are "median" and "mean"
#  - `per_selection_tooltips`: whether to show per-selection effects via tooltips
#  - `plot_kwargs`: keyword arguments passed to `polyclonal.plot.lineplot_and_heatmap`
#  - `title`: title of plot. Will be suffixed with "(latent phenotype)" or ("functional score)"
#  - `legend`: legend added to plot

# Define some defaults for each condition, used via the merge (<<) operator.
avg_func_effects_default: &avg_func_effects_default
  avg_method: median
  per_selection_tooltips: true
  plot_kwargs:
    alphabet: ['R','K','H','D','E','Q','N','S','T','Y','W','F','A','I','L','M','V','G','P','C',"'*'"]
    addtl_slider_stats:
      times_seen: 2
      n_selections: 1
    heatmap_max_at_least: 2
    heatmap_min_at_least: -1
    init_floor_at_zero: false
    init_site_statistic: mean
    site_zoom_bar_color_col: region  # supplied in the `site_numbering_map`
    slider_binding_range_kwargs:
      times_seen:
        step: 1
        min: 1
        max: 25
      n_selections:
        step: 1

# Define the functional effect conditions to average
avg_func_effects:
  293T_entry:
    <<: *avg_func_effects_default
    selections:
      - LibA-240507-293T-1
      - LibA-240523-293T-1
      - LibB-240523-293T-1
      - LibB-240604-293T-1
      - LibB-240619-293T-1
      - LibB-240624-293T-1

# --------------------------------------------------------------------------------------
# Configuration for func effect shifts from `multidms` models comparing conditions.
# --------------------------------------------------------------------------------------

# Define `func_effect_shifts` comparisons of different conditions. Each key is a comparison.
# Each comparison should have the following keys:
#  - `conditions` : dict keyed by condition names with values func scores from above.
#  - `reference` : name of the reference condition, must be in `conditions`
#  - `clip_lower` : how to clip functional scores at lower bound
#  - `clip_upper` : how to clip functional scores at upper bound
#  - `collapse_identical_barcodes` : do we collapse identical barcodes?
#  - `latent_offset` : is there a condition specific offset in latent effects
#  - `lasso_shifts` : list of strength of lasso regularization on shifts
# If you are not doing comparisons, just set `func_effect_shifts` to `null` or
# leave it out altogether.

func_effect_shifts: null

# --------------------------------------------------------------------------------------
# Configuration for averaging func effect shifts from multiple comparisons.
# --------------------------------------------------------------------------------------

# Define `func_effect_shifts` comparisons to average. `avg_func_effect_shifts` is keyed
# by name of averaged comparisons. Keys within that are:
#  - `title`: title of comparisons being averaged
#  - `comparisons`: list of comparisons from `func_effect_shifts`, must have same
#                   condition names, lasso shifts, and reference.
#  - `lasso_shift`: the single lasso shift to use for the final averaged values.
#  - `avg_method`: how to average across the selections, options are "median" and "mean"
#  - `plot_kwargs`: keyword arguments passed to `polyclonal.plot.lineplot_and_heatmap`
#  - `title`: title of plot. Will be suffixed with "(latent phenotype)" or ("functional score)"
#  - `legend`: legend added to plot
# Define some defaults for each condition, used via the merge (<<) operator.

avg_func_effect_shifts_default: null
